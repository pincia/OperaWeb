// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OperaWeb.Server.DataClasses.Context;

#nullable disable

namespace OperaWeb.Server.DataClasses.Migrations
{
    [DbContext(typeof(OperaWebDbContext))]
    [Migration("20241223221024_ediutconfigAnalisi")]
    partial class ediutconfigAnalisi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.OrganizationMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("OrganizationMembers", (string)null);
                });

            modelBuilder.Entity("Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Analisi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ApplicataA")
                        .HasColumnType("int");

                    b.Property<decimal>("ConfQuantita")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Metodo")
                        .HasColumnType("int");

                    b.Property<decimal>("OneriAccessoriSc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<decimal>("SpeseGenerali")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpeseUtili")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UtiliImpresa")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID")
                        .IsUnique();

                    b.ToTable("Analisi");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CodFase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInit")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesEstesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesSintetica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Durata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExternalID")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentuale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Comune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<string>("SiglaProvincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Comuni");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ConfigNumeri", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Aliquote")
                        .HasColumnType("int");

                    b.Property<int>("ConvPrezzi")
                        .HasColumnType("int");

                    b.Property<int>("ConvPrezziTotale")
                        .HasColumnType("int");

                    b.Property<int>("HPeso")
                        .HasColumnType("int");

                    b.Property<int>("IncidenzaPercentuale")
                        .HasColumnType("int");

                    b.Property<int>("Larghezza")
                        .HasColumnType("int");

                    b.Property<int>("Lunghezza")
                        .HasColumnType("int");

                    b.Property<int>("PartiUguali")
                        .HasColumnType("int");

                    b.Property<int>("Prezzi")
                        .HasColumnType("int");

                    b.Property<int>("PrezziTotale")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.Property<string>("Valuta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID")
                        .IsUnique();

                    b.ToTable("ConfigNumeri");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.DatiGenerali", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Committente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comune")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Impresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oggetto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParteOpera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PercPrezzi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID")
                        .IsUnique();

                    b.ToTable("DatiGenerali");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ElencoPrezzo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AdrInternet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Articolo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CapID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesBreve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesEstesa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesRidotta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flags")
                        .HasColumnType("int");

                    b.Property<int>("IDEP")
                        .HasColumnType("int");

                    b.Property<decimal>("Prezzo1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prezzo2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prezzo3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prezzo4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prezzo5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("PweEPAnalisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCapID")
                        .HasColumnType("int");

                    b.Property<int?>("SuperCapID")
                        .HasColumnType("int");

                    b.Property<string>("Tariffa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEP")
                        .HasColumnType("int");

                    b.Property<string>("UnMisura")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ElencoPrezzi");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.File", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Misura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flags")
                        .HasColumnType("int");

                    b.Property<decimal?>("HPeso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IDVV")
                        .HasColumnType("int");

                    b.Property<decimal?>("Larghezza")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Lunghezza")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PartiUguali")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantita")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VoceComputoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VoceComputoID");

                    b.ToTable("Misure");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.OrganizationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentRoleId");

                    b.ToTable("OrganizationRoles");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CUP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("FileID")
                        .HasColumnType("int");

                    b.Property<string>("GIG")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Object")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<int?>("SoaCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("SoaClassificationId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Works")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FileID");

                    b.HasIndex("SoaCategoryId");

                    b.HasIndex("SoaClassificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Progress")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectTasks");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Soa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Soa");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SoaClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("SoaClassifications");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SubCategoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CodFase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInit")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesEstesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesSintetica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Durata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExternalID")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentuale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("SubCategorie");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SuperCategoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CodFase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInit")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesEstesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesSintetica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Durata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExternalID")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentuale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("SuperCategorie");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Template", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyComuneId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyProvinciaId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyTaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ComuneId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PEC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIVA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<string>("RagioneSociale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDICode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubRoleId")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyComuneId");

                    b.HasIndex("CompanyProvinciaId");

                    b.HasIndex("ComuneId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("SubRoleId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.User.SubRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SubRoles");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.User.UserSubRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SubRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "SubRoleId");

                    b.HasIndex("SubRoleId");

                    b.ToTable("UserSubRoles");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.VoceComputo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataMis")
                        .HasColumnType("datetime2");

                    b.Property<int>("ElencoPrezzoID")
                        .HasColumnType("int");

                    b.Property<int>("Flags")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantita")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SubCategoriaID")
                        .HasColumnType("int");

                    b.Property<int?>("SuperCategoriaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("ElencoPrezzoID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("SubCategoriaID");

                    b.HasIndex("SuperCategoriaID");

                    b.ToTable("VociComputo");
                });

            modelBuilder.Entity("OperaWeb.Server.Models.IdentityRoleOrganizationRoleMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdentityRoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OrganizationRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdentityRoleId");

                    b.HasIndex("OrganizationRoleId");

                    b.ToTable("OrganizationRoleMappings");
                });

            modelBuilder.Entity("ProjectSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectSubjectRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectSubjectRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectSubjects");
                });

            modelBuilder.Entity("ProjectSubjectRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubjectRoles");
                });

            modelBuilder.Entity("RoleSubRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SubRoleId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "SubRoleId");

                    b.HasIndex("SubRoleId");

                    b.ToTable("RoleSubRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.OrganizationMember", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.OrganizationRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Notification", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Analisi", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithOne("Analisi")
                        .HasForeignKey("OperaWeb.Server.DataClasses.Models.Analisi", "ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Categoria", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("Categorie")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Comune", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Provincia", "Provincia")
                        .WithMany("Comuni")
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ConfigNumeri", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithOne("ConfigNumeri")
                        .HasForeignKey("OperaWeb.Server.DataClasses.Models.ConfigNumeri", "ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.DatiGenerali", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithOne("DatiGenerali")
                        .HasForeignKey("OperaWeb.Server.DataClasses.Models.DatiGenerali", "ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ElencoPrezzo", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("ElencoPrezzi")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.File", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Misura", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.VoceComputo", "VoceComputo")
                        .WithMany("Misure")
                        .HasForeignKey("VoceComputoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoceComputo");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.OrganizationRole", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.OrganizationRole", "ParentRole")
                        .WithMany("SubRoles")
                        .HasForeignKey("ParentRoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentRole");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Project", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.Soa", "SoaCategory")
                        .WithMany()
                        .HasForeignKey("SoaCategoryId");

                    b.HasOne("OperaWeb.Server.DataClasses.Models.SoaClassification", "SoaClassification")
                        .WithMany()
                        .HasForeignKey("SoaClassificationId");

                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("SoaCategory");

                    b.Navigation("SoaClassification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ProjectTask", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.ProjectTask", "Parent")
                        .WithMany("SubTasks")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("ProjectTasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SubCategoria", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("SubCategorie")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SuperCategoria", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("SuperCategorie")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Comune", "CompanyComune")
                        .WithMany()
                        .HasForeignKey("CompanyComuneId");

                    b.HasOne("OperaWeb.Server.DataClasses.Models.Provincia", "CompanyProvincia")
                        .WithMany()
                        .HasForeignKey("CompanyProvinciaId");

                    b.HasOne("OperaWeb.Server.DataClasses.Models.Comune", "Comune")
                        .WithMany()
                        .HasForeignKey("ComuneId");

                    b.HasOne("OperaWeb.Server.DataClasses.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId");

                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.SubRole", "SubRole")
                        .WithMany()
                        .HasForeignKey("SubRoleId");

                    b.Navigation("CompanyComune");

                    b.Navigation("CompanyProvincia");

                    b.Navigation("Comune");

                    b.Navigation("Provincia");

                    b.Navigation("SubRole");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.User.UserSubRole", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.SubRole", "SubRole")
                        .WithMany()
                        .HasForeignKey("SubRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.VoceComputo", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OperaWeb.Server.DataClasses.Models.ElencoPrezzo", "ElencoPrezzo")
                        .WithMany()
                        .HasForeignKey("ElencoPrezzoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("VociComputo")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.SubCategoria", "SubCategoria")
                        .WithMany()
                        .HasForeignKey("SubCategoriaID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OperaWeb.Server.DataClasses.Models.SuperCategoria", "SuperCategoria")
                        .WithMany()
                        .HasForeignKey("SuperCategoriaID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Categoria");

                    b.Navigation("ElencoPrezzo");

                    b.Navigation("Project");

                    b.Navigation("SubCategoria");

                    b.Navigation("SuperCategoria");
                });

            modelBuilder.Entity("OperaWeb.Server.Models.IdentityRoleOrganizationRoleMapping", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "IdentityRole")
                        .WithMany()
                        .HasForeignKey("IdentityRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.OrganizationRole", "OrganizationRole")
                        .WithMany()
                        .HasForeignKey("OrganizationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityRole");

                    b.Navigation("OrganizationRole");
                });

            modelBuilder.Entity("ProjectSubject", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("ProjectSubjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProjectSubjectRole", "ProjectSubjectRole")
                        .WithMany()
                        .HasForeignKey("ProjectSubjectRoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Project");

                    b.Navigation("ProjectSubjectRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoleSubRole", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.User.SubRole", "SubRole")
                        .WithMany()
                        .HasForeignKey("SubRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("SubRole");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.OrganizationRole", b =>
                {
                    b.Navigation("SubRoles");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Project", b =>
                {
                    b.Navigation("Analisi")
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("ConfigNumeri")
                        .IsRequired();

                    b.Navigation("DatiGenerali")
                        .IsRequired();

                    b.Navigation("ElencoPrezzi");

                    b.Navigation("ProjectSubjects");

                    b.Navigation("ProjectTasks");

                    b.Navigation("SubCategorie");

                    b.Navigation("SuperCategorie");

                    b.Navigation("VociComputo");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ProjectTask", b =>
                {
                    b.Navigation("SubTasks");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Provincia", b =>
                {
                    b.Navigation("Comuni");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.VoceComputo", b =>
                {
                    b.Navigation("Misure");
                });
#pragma warning restore 612, 618
        }
    }
}
