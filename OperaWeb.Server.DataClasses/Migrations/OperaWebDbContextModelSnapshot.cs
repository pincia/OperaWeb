// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OperaWeb.Server.DataClasses.Context;

#nullable disable

namespace OperaWeb.Server.DataClasses.Migrations
{
    [DbContext(typeof(OperaWebDbContext))]
    partial class OperaWebDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Analisi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ConfQuantita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OneriAccessoriSc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<decimal>("SpeseGenerali")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpeseUtili")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UtiliImpresa")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Analisi");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CodFase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInit")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesEstesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesSintetica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Durata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExternalID")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentuale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID1")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("ProjectID1");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ConfigNumeri", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Aliquote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Cambio")
                        .HasColumnType("tinyint");

                    b.Property<string>("ConvPrezzi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConvPrezziTotale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConversioniIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Divisa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FattoreConversione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HPeso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidenzaPercentuale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Larghezza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lunghezza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartiUguali")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezzi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrezziTotale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("Quantita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ConfigNumeri");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.DatiGenerali", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Committente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comune")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Impresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oggetto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParteOpera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PercPrezzi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("DatiGenerali");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ElencoPrezzo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AdrInternet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Articolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CapID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesBreve")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesEstesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesRidotta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flags")
                        .HasColumnType("int");

                    b.Property<int>("IDEP")
                        .HasColumnType("int");

                    b.Property<decimal>("Prezzo1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prezzo2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prezzo3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prezzo4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prezzo5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("PweEPAnalisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCapID")
                        .HasColumnType("int");

                    b.Property<int?>("SuperCapID")
                        .HasColumnType("int");

                    b.Property<string>("Tariffa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEP")
                        .HasColumnType("int");

                    b.Property<string>("UnMisura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ElencoPrezzi");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.File", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Misura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flags")
                        .HasColumnType("int");

                    b.Property<decimal?>("HPeso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IDVV")
                        .HasColumnType("int");

                    b.Property<decimal?>("Larghezza")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Lunghezza")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PartiUguali")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantita")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VoceComputoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VoceComputoID");

                    b.ToTable("Misure");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CUP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("FileID")
                        .HasColumnType("int");

                    b.Property<string>("GIG")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Object")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Public")
                        .HasColumnType("bit");

                    b.Property<int?>("SoaCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("SoaClassificationId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Works")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FileID");

                    b.HasIndex("SoaCategoryId");

                    b.HasIndex("SoaClassificationId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Soa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Soa");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SoaClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("SoaClassifications");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SubCategoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CodFase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInit")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesEstesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesSintetica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Durata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExternalID")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentuale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("SubCategorie");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SuperCategoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CodFase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInit")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesEstesa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesSintetica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Durata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExternalID")
                        .HasColumnType("int");

                    b.Property<decimal>("Percentuale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("SuperCategorie");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Template", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.VoceComputo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoriaID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataMis")
                        .HasColumnType("datetime2");

                    b.Property<int>("ElencoPrezzoID")
                        .HasColumnType("int");

                    b.Property<int>("Flags")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantita")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SubCategoriaID")
                        .HasColumnType("int");

                    b.Property<int?>("SuperCategoriaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID1");

                    b.HasIndex("ElencoPrezzoID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("SubCategoriaID");

                    b.HasIndex("SuperCategoriaID");

                    b.ToTable("VociComputo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Analisi", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Categoria", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", null)
                        .WithMany("Categorie")
                        .HasForeignKey("ProjectID1");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ConfigNumeri", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("ConfigNumeri")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.DatiGenerali", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("DatiGenerali")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.ElencoPrezzo", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("ElencoPrezzi")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.File", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Misura", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.VoceComputo", "VoceComputo")
                        .WithMany("Misure")
                        .HasForeignKey("VoceComputoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoceComputo");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Project", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.Soa", "SoaCategory")
                        .WithMany()
                        .HasForeignKey("SoaCategoryId");

                    b.HasOne("OperaWeb.Server.DataClasses.Models.SoaClassification", "SoaClassification")
                        .WithMany()
                        .HasForeignKey("SoaClassificationId");

                    b.HasOne("OperaWeb.Server.DataClasses.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("File");

                    b.Navigation("SoaCategory");

                    b.Navigation("SoaClassification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SubCategoria", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("SubCategorie")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.SuperCategoria", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("SuperCategorie")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.VoceComputo", b =>
                {
                    b.HasOne("OperaWeb.Server.DataClasses.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.ElencoPrezzo", "ElencoPrezzo")
                        .WithMany()
                        .HasForeignKey("ElencoPrezzoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.Project", "Project")
                        .WithMany("VociComputo")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OperaWeb.Server.DataClasses.Models.SubCategoria", "SubCategoria")
                        .WithMany()
                        .HasForeignKey("SubCategoriaID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OperaWeb.Server.DataClasses.Models.SuperCategoria", "SuperCategoria")
                        .WithMany()
                        .HasForeignKey("SuperCategoriaID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Categoria");

                    b.Navigation("ElencoPrezzo");

                    b.Navigation("Project");

                    b.Navigation("SubCategoria");

                    b.Navigation("SuperCategoria");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.Project", b =>
                {
                    b.Navigation("Categorie");

                    b.Navigation("ConfigNumeri");

                    b.Navigation("DatiGenerali");

                    b.Navigation("ElencoPrezzi");

                    b.Navigation("SubCategorie");

                    b.Navigation("SuperCategorie");

                    b.Navigation("VociComputo");
                });

            modelBuilder.Entity("OperaWeb.Server.DataClasses.Models.VoceComputo", b =>
                {
                    b.Navigation("Misure");
                });
#pragma warning restore 612, 618
        }
    }
}
